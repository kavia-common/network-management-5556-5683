{"is_source_file": true, "format": "JavaScript (React Hook)", "description": "This file defines a custom React hook 'useDebouncedValue' that provides a debounced version of a value, delaying updates until after a specified delay to optimize performance for expensive computations or API calls.", "external_files": ["react"], "external_methods": ["React.useEffect", "React.useState"], "published": ["useDebouncedValue"], "classes": [], "methods": [{"name": "useDebouncedValue(value, delay = 250)", "description": "Returns a debounced value that updates only after the specified delay has elapsed since the last change.", "scope": "", "scopeKind": ""}], "calls": ["setTimeout", "clearTimeout"], "search-terms": ["useDebouncedValue", "debounce", "React hook", "useEffect", "useState", "debounced state", "React"], "state": 2, "file_id": 59, "knowledge_revision": 232, "git_revision": "", "ctags": [{"_type": "tag", "name": "useDebouncedValue", "path": "/home/kavia/workspace/code-generation/network-management-5556-5683/FrontendApplication/src/hooks/useDebouncedValue.js", "pattern": "/^export function useDebouncedValue(value, delay = 250) {$/", "language": "JavaScript", "kind": "function", "signature": "(value, delay = 250)"}], "hash": "a557551cb80b8f4af7ca3dc44b68cb90", "format-version": 4, "code-base-name": "FrontendApplication", "filename": "FrontendApplication/src/hooks/useDebouncedValue.js", "revision_history": [{"232": ""}]}