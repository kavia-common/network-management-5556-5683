{"is_source_file": true, "format": "JavaScript", "description": "This file manages device-related data operations within a network management frontend application. It provides functions for listing, fetching, creating, updating, deleting, and pinging devices, supporting both mock data and real backend API calls. The code includes utility functions for data normalization and mapping, and manages in-memory mock device store for testing purposes.", "external_files": ["./client"], "external_methods": ["http.request", "getUseMocks"], "published": ["listDevices", "getDevice", "createDevice", "updateDevice", "deleteDevice", "pingDevice"], "classes": [], "methods": [{"name": "normalizeServerPagination(res)", "description": "Converts server response to a normalized pagination structure, handling both paginated responses and plain arrays.", "scope": "", "scopeKind": ""}, {"name": "listDevices({ page, limit } = {})", "description": "Fetches a list of devices from backend or mock data, with optional pagination.", "scope": "", "scopeKind": ""}, {"name": "getDevice(id)", "description": "Retrieves a single device by ID, either from mock data or via an API call.", "scope": "", "scopeKind": ""}, {"name": "createDevice(payload)", "description": "Creates a new device entry, with mock logic for uniqueness and backend API call otherwise.", "scope": "", "scopeKind": ""}, {"name": "updateDevice(id, payload)", "description": "Updates an existing device by ID, supporting mock data and backend API.", "scope": "", "scopeKind": ""}, {"name": "deleteDevice(id)", "description": "Deletes a device by ID, either from mock data or via an API call.", "scope": "", "scopeKind": ""}, {"name": "pingDevice(id)", "description": "Simulates or performs a ping to a device to refresh its status, returning the updated device.", "scope": "", "scopeKind": ""}, {"name": "mapToServer", "description": "Maps device data to server format (shallow copy)."}, {"name": "mapFromServer", "description": "Maps server device data to client format, ensuring 'id' exists."}], "calls": ["getUseMocks", "http.request", "delay", "mapToServer", "mapFromServer"], "search-terms": ["devices", "device management", "mock store", "pagination", "device CRUD", "network management"], "state": 2, "file_id": 15, "knowledge_revision": 66, "git_revision": "5a60b2b0d6fc0d12eb4dc37e8d5a9454936e012c", "revision_history": [{"33": ""}, {"62": ""}, {"63": ""}, {"64": ""}, {"65": "5a60b2b0d6fc0d12eb4dc37e8d5a9454936e012c"}, {"66": "5a60b2b0d6fc0d12eb4dc37e8d5a9454936e012c"}], "ctags": [{"_type": "tag", "name": "createDevice", "path": "/home/kavia/workspace/code-generation/network-management-5556-5683/FrontendApplication/src/api/devices.js", "pattern": "/^export async function createDevice(payload) {$/", "language": "JavaScript", "kind": "function", "signature": "(payload)"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/network-management-5556-5683/FrontendApplication/src/api/devices.js", "pattern": "/^      err.data = { field: 'name', message: 'Device name or IP must be unique.' };$/", "language": "JavaScript", "kind": "class", "scope": "err", "scopeKind": "class"}, {"_type": "tag", "name": "delay", "path": "/home/kavia/workspace/code-generation/network-management-5556-5683/FrontendApplication/src/api/devices.js", "pattern": "/^const delay = (ms) => new Promise((r) => setTimeout(r, ms));$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "deleteDevice", "path": "/home/kavia/workspace/code-generation/network-management-5556-5683/FrontendApplication/src/api/devices.js", "pattern": "/^export async function deleteDevice(id) {$/", "language": "JavaScript", "kind": "function", "signature": "(id)"}, {"_type": "tag", "name": "field", "path": "/home/kavia/workspace/code-generation/network-management-5556-5683/FrontendApplication/src/api/devices.js", "pattern": "/^      err.data = { field: 'name', message: 'Device name or IP must be unique.' };$/", "language": "JavaScript", "kind": "property", "scope": "err.data", "scopeKind": "class"}, {"_type": "tag", "name": "getDevice", "path": "/home/kavia/workspace/code-generation/network-management-5556-5683/FrontendApplication/src/api/devices.js", "pattern": "/^export async function getDevice(id) {$/", "language": "JavaScript", "kind": "function", "signature": "(id)"}, {"_type": "tag", "name": "listDevices", "path": "/home/kavia/workspace/code-generation/network-management-5556-5683/FrontendApplication/src/api/devices.js", "pattern": "/^export async function listDevices({ page, limit } = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "({ page, limit } = {})"}, {"_type": "tag", "name": "mapFromServer", "path": "/home/kavia/workspace/code-generation/network-management-5556-5683/FrontendApplication/src/api/devices.js", "pattern": "/^const mapFromServer = (d) => ({ ...d, id: d.id ?? d._id });$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "mapToServer", "path": "/home/kavia/workspace/code-generation/network-management-5556-5683/FrontendApplication/src/api/devices.js", "pattern": "/^const mapToServer = (d) => ({ ...d });$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/network-management-5556-5683/FrontendApplication/src/api/devices.js", "pattern": "/^      err.data = { field: 'name', message: 'Device name or IP must be unique.' };$/", "language": "JavaScript", "kind": "property", "scope": "err.data", "scopeKind": "class"}, {"_type": "tag", "name": "mockDevices", "path": "/home/kavia/workspace/code-generation/network-management-5556-5683/FrontendApplication/src/api/devices.js", "pattern": "/^let mockDevices = [$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "normalizeServerPagination", "path": "/home/kavia/workspace/code-generation/network-management-5556-5683/FrontendApplication/src/api/devices.js", "pattern": "/^function normalizeServerPagination(res) {$/", "language": "JavaScript", "kind": "function", "signature": "(res)"}, {"_type": "tag", "name": "pingDevice", "path": "/home/kavia/workspace/code-generation/network-management-5556-5683/FrontendApplication/src/api/devices.js", "pattern": "/^export async function pingDevice(id) {$/", "language": "JavaScript", "kind": "function", "signature": "(id)"}, {"_type": "tag", "name": "updateDevice", "path": "/home/kavia/workspace/code-generation/network-management-5556-5683/FrontendApplication/src/api/devices.js", "pattern": "/^export async function updateDevice(id, payload) {$/", "language": "JavaScript", "kind": "function", "signature": "(id, payload)"}], "hash": "1a5cb17e6ca1f0c3631c662c2682dedc", "format-version": 4, "code-base-name": "FrontendApplication", "filename": "FrontendApplication/src/api/devices.js", "fields": [{"name": "err.data = { field: 'name', message: 'Device name or IP must be unique.' };", "scope": "err.data", "scopeKind": "class", "description": "unavailable"}, {"name": "let mockDevices = [", "scope": "", "scopeKind": "", "description": "unavailable"}]}